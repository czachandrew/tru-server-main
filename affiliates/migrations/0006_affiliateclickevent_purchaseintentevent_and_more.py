# Generated by Django 4.2.7 on 2025-07-17 15:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("users", "0002_userprofile_activity_score_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("affiliates", "0005_add_processing_fields"),
    ]

    operations = [
        migrations.CreateModel(
            name="AffiliateClickEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("extension", "Browser Extension"),
                            ("website", "Website Direct"),
                            ("email", "Email Campaign"),
                            ("social", "Social Media"),
                            ("other", "Other"),
                        ],
                        default="extension",
                        help_text="Source of the click (extension, website, etc.)",
                        max_length=20,
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        help_text="Extension-generated session ID for tracking",
                        max_length=100,
                    ),
                ),
                (
                    "referrer_url",
                    models.TextField(
                        blank=True, help_text="URL where the user was when they clicked"
                    ),
                ),
                (
                    "target_domain",
                    models.CharField(
                        help_text="Domain user was redirected to (amazon.com, ebay.com, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "product_data",
                    models.JSONField(
                        default=dict,
                        help_text="Product details as detected by extension",
                    ),
                ),
                ("user_agent", models.TextField(blank=True)),
                ("browser_fingerprint", models.CharField(blank=True, max_length=100)),
                ("clicked_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session_duration",
                    models.IntegerField(
                        blank=True,
                        help_text="Time spent on target site in seconds",
                        null=True,
                    ),
                ),
                ("session_ended_at", models.DateTimeField(blank=True, null=True)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this click is still being tracked",
                    ),
                ),
                (
                    "affiliate_link",
                    models.ForeignKey(
                        help_text="Affiliate link that was clicked",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="click_events",
                        to="affiliates.affiliatelink",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who clicked the affiliate link",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="affiliate_clicks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-clicked_at"],
            },
        ),
        migrations.CreateModel(
            name="PurchaseIntentEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "intent_stage",
                    models.CharField(
                        choices=[
                            ("cart_add", "Added to Cart"),
                            ("cart_view", "Viewing Cart"),
                            ("shipping_info", "Entered Shipping Info"),
                            ("payment_page", "Reached Payment Page"),
                            ("payment_info", "Entered Payment Info"),
                            ("order_review", "Order Review"),
                            ("order_submit", "Order Submitted"),
                            ("order_confirmed", "Order Confirmed"),
                        ],
                        help_text="Stage of purchase process detected",
                        max_length=20,
                    ),
                ),
                (
                    "confidence_level",
                    models.CharField(
                        choices=[
                            ("LOW", "Low (30-50%)"),
                            ("MEDIUM", "Medium (50-70%)"),
                            ("HIGH", "High (70-90%)"),
                            ("VERY_HIGH", "Very High (90%+)"),
                        ],
                        help_text="Confidence level of purchase intent",
                        max_length=10,
                    ),
                ),
                (
                    "confidence_score",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Numerical confidence score (0.00-1.00)",
                        max_digits=3,
                    ),
                ),
                (
                    "cart_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Total cart value if detected",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "cart_items",
                    models.JSONField(
                        default=list,
                        help_text="List of items in cart as detected by extension",
                    ),
                ),
                (
                    "matched_products",
                    models.JSONField(
                        default=list,
                        help_text="Products that match original affiliate link",
                    ),
                ),
                (
                    "page_url",
                    models.TextField(help_text="URL where intent was detected"),
                ),
                ("page_title", models.CharField(blank=True, max_length=255)),
                ("detected_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "has_created_projection",
                    models.BooleanField(
                        default=False,
                        help_text="Whether a projected earning was created for this intent",
                    ),
                ),
                (
                    "click_event",
                    models.ForeignKey(
                        help_text="Original click event that led to this purchase intent",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchase_intents",
                        to="affiliates.affiliateclickevent",
                    ),
                ),
                (
                    "projected_transaction",
                    models.OneToOneField(
                        blank=True,
                        help_text="Projected wallet transaction created from this intent",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="purchase_intent",
                        to="users.wallettransaction",
                    ),
                ),
            ],
            options={
                "ordering": ["-detected_at"],
                "indexes": [
                    models.Index(
                        fields=["click_event", "detected_at"],
                        name="affiliates__click_e_a5a97a_idx",
                    ),
                    models.Index(
                        fields=["intent_stage", "confidence_level"],
                        name="affiliates__intent__e44634_idx",
                    ),
                    models.Index(
                        fields=["has_created_projection"],
                        name="affiliates__has_cre_46e94e_idx",
                    ),
                    models.Index(
                        fields=["detected_at"], name="affiliates__detecte_d391f9_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="affiliateclickevent",
            index=models.Index(
                fields=["user", "clicked_at"], name="affiliates__user_id_206b8f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="affiliateclickevent",
            index=models.Index(
                fields=["affiliate_link", "clicked_at"],
                name="affiliates__affilia_f20286_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="affiliateclickevent",
            index=models.Index(
                fields=["session_id"], name="affiliates__session_fb8f72_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="affiliateclickevent",
            index=models.Index(
                fields=["target_domain"], name="affiliates__target__b273d7_idx"
            ),
        ),
    ]
