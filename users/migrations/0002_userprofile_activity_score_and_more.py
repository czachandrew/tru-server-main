# Generated by Django 4.2.7 on 2025-07-15 14:23

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("affiliates", "0005_add_processing_fields"),
        ("users", "0001_user_avatar_user_google_id"),
    ]

    operations = [
        migrations.AddField(
            model_name="userprofile",
            name="activity_score",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("1.00"),
                help_text="User activity score (1.00-5.00) affecting revenue share rate",
                max_digits=5,
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="available_balance",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Confirmed balance available for spending/withdrawal",
                max_digits=10,
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="lifetime_earnings",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Total confirmed earnings ever received",
                max_digits=10,
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="min_cashout_amount",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("10.00"),
                help_text="Minimum amount for cash withdrawal",
                max_digits=6,
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="pending_balance",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Projected earnings awaiting confirmation",
                max_digits=10,
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="total_spent",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Total store credit used",
                max_digits=10,
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="total_withdrawn",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Total cash withdrawals made",
                max_digits=10,
            ),
        ),
        migrations.CreateModel(
            name="WalletTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("EARNING_PROJECTED", "Projected Earning"),
                            ("EARNING_CONFIRMED", "Confirmed Earning"),
                            ("EARNING_ADJUSTED", "Earning Adjustment"),
                            ("SPENDING_STORE", "Store Credit Usage"),
                            ("WITHDRAWAL_CASH", "Cash Withdrawal"),
                            ("WITHDRAWAL_PENDING", "Pending Withdrawal"),
                            ("WITHDRAWAL_FAILED", "Failed Withdrawal"),
                            ("BONUS_ACTIVITY", "Activity Bonus"),
                            ("RECONCILIATION", "Monthly Reconciliation"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("CONFIRMED", "Confirmed"),
                            ("FAILED", "Failed"),
                            ("REVERSED", "Reversed"),
                            ("PROCESSING", "Processing"),
                        ],
                        default="PENDING",
                        max_length=15,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "balance_before",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("balance_after", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "order_reference",
                    models.CharField(
                        blank=True,
                        help_text="Order ID if this was store credit usage",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "withdrawal_reference",
                    models.CharField(
                        blank=True,
                        help_text="Payment processor reference (Stripe, PayPal, etc.)",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "affiliate_link",
                    models.ForeignKey(
                        blank=True,
                        help_text="Affiliate link that generated this earning",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="affiliates.affiliatelink",
                    ),
                ),
                (
                    "processed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Admin user who processed this transaction",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="processed_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wallet_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "transaction_type"],
                        name="users_walle_user_id_b956c8_idx",
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="users_walle_status_f824c2_idx",
                    ),
                    models.Index(
                        fields=["affiliate_link"], name="users_walle_affilia_ca81bb_idx"
                    ),
                    models.Index(
                        fields=["transaction_type", "status"],
                        name="users_walle_transac_8e02a4_idx",
                    ),
                ],
            },
        ),
    ]
